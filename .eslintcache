[{"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\index.js":"1","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\App.js":"2","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\reportWebVitals.js":"3","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\AppBar.js":"4","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\store.js":"5","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\actions\\actions.js":"6","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\constants\\constants.js":"7","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\reducers\\reducers.js":"8","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\HomeScreen.js":"9","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Loader.js":"10","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Message.js":"11","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Sidebar.js":"12","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\CategoryScreen.js":"13"},{"size":605,"mtime":1610188933733,"results":"14","hashOfConfig":"15"},{"size":1098,"mtime":1612110095967,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610130291127,"results":"17","hashOfConfig":"15"},{"size":5732,"mtime":1612167034266,"results":"18","hashOfConfig":"15"},{"size":989,"mtime":1611869122890,"results":"19","hashOfConfig":"15"},{"size":2531,"mtime":1611869283656,"results":"20","hashOfConfig":"15"},{"size":1331,"mtime":1611868847994,"results":"21","hashOfConfig":"15"},{"size":3243,"mtime":1611869129686,"results":"22","hashOfConfig":"15"},{"size":5352,"mtime":1612169449068,"results":"23","hashOfConfig":"15"},{"size":286,"mtime":1611860086842,"results":"24","hashOfConfig":"15"},{"size":143,"mtime":1610992979278,"results":"25","hashOfConfig":"15"},{"size":842,"mtime":1612106814487,"results":"26","hashOfConfig":"15"},{"size":1289,"mtime":1612135558884,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1npfuf9",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\index.js",["59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["60","61"],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\App.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\reportWebVitals.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\AppBar.js",["62","63","64","65"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Form, Button } from 'react-bootstrap';\nimport { Autocomplete } from '@material-ui/lab';\nimport { TextField } from '@material-ui/core';\nimport {\n  setBookAction,\n  setChapterAction,\n  setVerseAction,\n} from '../actions/actions';\n\nconst NavbarComponent = ({ history }) => {\n  const dispatch = useDispatch();\n  const { books: allBooks } = useSelector((state) => state.setBooks);\n  const [goIsDisabled, setGoDisabled] = useState(true);\n  const [book, setBook] = useState('Genesis');\n  const [chapters, setChapters] = useState([]);\n  const [chapter, setChapter] = useState(1);\n  const [verse, setVerse] = useState(1);\n  const [disableChapter, setDisableChapter] = useState(true);\n  const [disableVerse, setDisableVerse] = useState(true);\n  const [error, setError] = useState(null);\n  const { book: currentBook, chapters: newChapters } = useSelector(\n    (state) => state.setBook\n  );\n  const { verses: newVerses } = useSelector((state) => state.setChapter);\n\n  const styler = {\n    navbar: {\n      boxShadow: '0px 6px 5px 0px rgba(0,0,0,0.36)',\n    },\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(setVerseAction({ book, chapter, verse }));\n    history.push(`/word/${book}/${chapter}/${verse}`);\n  };\n  const setBookHandler = (e, val) => {\n    if (val) {\n      let t = allBooks.indexOf(val);\n      if (t !== -1) {\n        setBook(val);\n        setDisableChapter(false);\n        dispatch(setBookAction(val));\n        dispatch(setVerseAction({ book: val, chapter, verse }));\n        setChapters(newChapters);\n      } else {\n        let error = new Error('Book not found!');\n        setError(error);\n        setDisableChapter(true);\n      }\n    }\n  };\n  const setChapterHandler = (e, val) => {\n    if (val) {\n      if (Number(val) <= chapters.length || Number(val) > 0) {\n        setDisableVerse(false);\n        setChapter(val);\n        setError(null);\n        dispatch(setChapterAction({ book, chapter }));\n        dispatch(setVerseAction({ book, chapter: val, verse }));\n      } else {\n        let error = new Error('Chapter not found!');\n        setError(error);\n        setDisableVerse(true);\n      }\n    }\n  };\n  const setVerseHandler = (e, val) => {\n    setVerse(val);\n    if (val) {\n      if (Number(val) <= newVerses.length || Number(val) > 0) {\n        setVerse(val);\n        setError(null);\n        dispatch(setVerseAction({ book, chapter, verse: val }));\n        setGoDisabled(false);\n      } else {\n        let error = new Error('Chapter not found!');\n        setError(error);\n        setDisableVerse(true);\n        setGoDisabled(true);\n      }\n    }\n  };\n  return (\n    <Navbar\n      bg='light'\n      className='justify-content-between navbar-expand-*'\n      style={styler.navbar}\n    >\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse\n        id='basic-navbar-nav'\n        className='justify-content-between'\n      >\n        <Nav className={window.innerWidth > 768 ? 'mx-auto py-2' : 'mx-auto'}>\n          <Form inline onSubmit={submitHandler}>\n            <Form.Group id='book-form-group'>\n              <Autocomplete\n                className={`mx-2 w-7`}\n                color='inherit'\n                id='book'\n                onChange={setBookHandler}\n                options={allBooks}\n                getOptionLabel={(option) => option}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label='Book'\n                    className='primary'\n                    variant='standard'\n                    value={book}\n                    size={'small'}\n                    className='text-center'\n                  />\n                )}\n              />\n            </Form.Group>\n            <Form.Group id='chapter-form-group'>\n              <Autocomplete\n                className=' mx-2 w-45'\n                color='inherit'\n                id='chapter'\n                disabled={disableChapter}\n                options={newChapters ? newChapters : []}\n                onChange={setChapterHandler}\n                getOptionLabel={(option) => option + ''}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label={window.innerWidth < 350 ? 'Ch' : 'Chapter'}\n                    variant='standard'\n                    className='text-center'\n                    value={chapter}\n                  />\n                )}\n              />\n            </Form.Group>\n            <Form.Group id='verse-form-group'>\n              <Autocomplete\n                className='w-45 mx-2'\n                color='inherit'\n                id='verse'\n                disabled={disableVerse}\n                options={newVerses ? newVerses : []}\n                onChange={setVerseHandler}\n                getOptionLabel={(option) => option + ''}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label={window.innerWidth < 350 ? 'Vs' : 'Verse'}\n                    variant='standard'\n                    className='text-center'\n                    value={verse}\n                  />\n                )}\n              />\n            </Form.Group>\n            <Button\n              type='submit'\n              className='btn btn-primary'\n              disabled={goIsDisabled}\n            >\n              Go\n            </Button>\n          </Form>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default withRouter(NavbarComponent);\n","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\store.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\actions\\actions.js",[],["66","67"],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\constants\\constants.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\reducers\\reducers.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\HomeScreen.js",["68"],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Loader.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Message.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Sidebar.js",["69","70","71","72","73","74"],"import React from 'react';\r\nimport {\r\n  Col,\r\n  Accordion,\r\n  ListGroup,\r\n  Alert,\r\n  Card,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Loader from './Loader.js';\r\n\r\nconst Sidebar = () => {\r\n  const { loading, error, categories } = useSelector(\r\n    (state) => state.setCategories\r\n  );\r\n  return (\r\n    <Col className='mobile-hide my-3' md='3' sm='3' xs='1'>\r\n      {loading && <Loader />}\r\n      <ListGroup variant='flush'>\r\n        {categories.map((category, key) => (\r\n          <LinkContainer key={key} to={`/categories/${category.category}`}>\r\n            <ListGroup.Item>{category.category}</ListGroup.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </ListGroup>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\CategoryScreen.js",[],{"ruleId":"75","severity":1,"message":"76","line":6,"column":27,"nodeType":"77","messageId":"78","endLine":6,"endColumn":33},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"83","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"84","line":24,"column":10,"nodeType":"77","messageId":"78","endLine":24,"endColumn":15},{"ruleId":"75","severity":1,"message":"85","line":25,"column":17,"nodeType":"77","messageId":"78","endLine":25,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":116,"column":21,"nodeType":"88","endLine":116,"endColumn":44},{"ruleId":"79","replacedBy":"89"},{"ruleId":"81","replacedBy":"90"},{"ruleId":"75","severity":1,"message":"91","line":9,"column":3,"nodeType":"77","messageId":"78","endLine":9,"endColumn":9},{"ruleId":"75","severity":1,"message":"92","line":4,"column":3,"nodeType":"77","messageId":"78","endLine":4,"endColumn":12},{"ruleId":"75","severity":1,"message":"93","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":6,"endColumn":8},{"ruleId":"75","severity":1,"message":"94","line":7,"column":3,"nodeType":"77","messageId":"78","endLine":7,"endColumn":7},{"ruleId":"75","severity":1,"message":"91","line":8,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":9},{"ruleId":"75","severity":1,"message":"95","line":11,"column":23,"nodeType":"77","messageId":"78","endLine":11,"endColumn":34},{"ruleId":"75","severity":1,"message":"84","line":15,"column":20,"nodeType":"77","messageId":"78","endLine":15,"endColumn":25},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'useEffect' is defined but never used.","'error' is assigned a value but never used.","'currentBook' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["96"],["97"],"'Button' is defined but never used.","'Accordion' is defined but never used.","'Alert' is defined but never used.","'Card' is defined but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation"]