[{"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\index.js":"1","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\App.js":"2","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\reportWebVitals.js":"3","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\AppBar.js":"4","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\store.js":"5","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\actions\\actions.js":"6","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\constants\\constants.js":"7","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\reducers\\reducers.js":"8","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\HomeScreen.js":"9","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Loader.js":"10","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Message.js":"11","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Sidebar.js":"12","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\CategoryScreen.js":"13","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Popup.js":"14","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\SearchScreen.js":"15","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\NotFound.js":"16","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\404.js":"17","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Footer.js":"18"},{"size":545,"mtime":1612467517274,"results":"19","hashOfConfig":"20"},{"size":1485,"mtime":1612523922033,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1610130291127,"results":"22","hashOfConfig":"20"},{"size":6481,"mtime":1612522460207,"results":"23","hashOfConfig":"20"},{"size":1048,"mtime":1612376382704,"results":"24","hashOfConfig":"20"},{"size":3198,"mtime":1612442342987,"results":"25","hashOfConfig":"20"},{"size":1510,"mtime":1612376137990,"results":"26","hashOfConfig":"20"},{"size":3901,"mtime":1612442340389,"results":"27","hashOfConfig":"20"},{"size":7820,"mtime":1612458577573,"results":"28","hashOfConfig":"20"},{"size":302,"mtime":1612377363400,"results":"29","hashOfConfig":"20"},{"size":143,"mtime":1610992979278,"results":"30","hashOfConfig":"20"},{"size":1458,"mtime":1612460767617,"results":"31","hashOfConfig":"20"},{"size":1286,"mtime":1612357439866,"results":"32","hashOfConfig":"20"},{"size":1159,"mtime":1612311390191,"results":"33","hashOfConfig":"20"},{"size":4250,"mtime":1612453373991,"results":"34","hashOfConfig":"20"},{"size":293,"mtime":1612451957693,"results":"35","hashOfConfig":"20"},{"size":660,"mtime":1612452648084,"results":"36","hashOfConfig":"20"},{"size":165,"mtime":1612463558253,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1npfuf9",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\index.js",[],["79","80"],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\App.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\reportWebVitals.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\AppBar.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\store.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\actions\\actions.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\constants\\constants.js",[],["81","82"],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\reducers\\reducers.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\HomeScreen.js",["83"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Breadcrumb,\r\n  Badge,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  setBooksAction,\r\n  setVerseAction,\r\n  setTextAction,\r\n  setBookAction,\r\n  setChapterAction,\r\n} from '../actions/actions';\r\nimport Popup from '../components/Popup';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const { params } = match;\r\n  let bookUrl = params.book || null;\r\n  let chapterUrl = params.chapter || null;\r\n  let verseUrl = params.verse || null;\r\n  const dispatch = useDispatch();\r\n  const [book, setBook] = useState(bookUrl);\r\n  const [chapter, setChapter] = useState(chapterUrl);\r\n  const [verse, setVerse] = useState(verseUrl);\r\n  const setBooks = useSelector((state) => state.setBooks);\r\n  const { finalVerse } = useSelector((state) => state.setReading);\r\n  const { books, loading } = setBooks;\r\n  const { loading: loadingVerse, error: errorVerse, page } = useSelector(\r\n    (state) => state.setReading\r\n  );\r\n  const { chapters: newChapters, loading: bookLoading } = useSelector(\r\n    (state) => state.setBook\r\n  );\r\n  const { verses: newVerses, loading: verseLoading } = useSelector(\r\n    (state) => state.setChapter\r\n  );\r\n\r\n  const {\r\n    book: bookSetVerse,\r\n    chapter: chapterSetVerse,\r\n    verse: verseSetVerse,\r\n  } = useSelector((state) => state.setVerse);\r\n  useEffect(() => {\r\n    if (newChapters.length < 1 && !bookLoading) {\r\n      dispatch(setBookAction(bookSetVerse));\r\n    }\r\n    if (newVerses.length < 1 && !verseLoading) {\r\n      dispatch(\r\n        setChapterAction({ book: bookSetVerse, chapter: chapterSetVerse })\r\n      );\r\n    }\r\n    if (bookUrl) {\r\n      if (chapterUrl) {\r\n        if (verseUrl) {\r\n          dispatch(\r\n            setVerseAction({\r\n              book: bookUrl,\r\n              chapter: chapterUrl,\r\n              verse: verseUrl,\r\n            })\r\n          );\r\n        } else {\r\n          dispatch(\r\n            setVerseAction({ book: bookUrl, chapter: chapterUrl, verse: 1 })\r\n          );\r\n        }\r\n      } else {\r\n        if (verseUrl) {\r\n          dispatch(\r\n            setVerseAction({ book: bookUrl, chapter: 1, verse: verseUrl })\r\n          );\r\n        } else {\r\n          dispatch(setVerseAction({ book: bookUrl, chapter: 1, verse: 1 }));\r\n        }\r\n      }\r\n    }\r\n    if (!book) {\r\n      setBook(bookSetVerse);\r\n    }\r\n    if (!chapter) {\r\n      setChapter(chapterSetVerse);\r\n    }\r\n    if (!verse) {\r\n      setVerse(verseSetVerse);\r\n    }\r\n    if (books.length < 1 && !loading) {\r\n      dispatch(setBooksAction());\r\n    }\r\n    dispatch(\r\n      setTextAction({\r\n        book: bookSetVerse,\r\n        chapter: chapterSetVerse,\r\n        verse: verseSetVerse,\r\n      })\r\n    );\r\n  }, [\r\n    dispatch,\r\n    bookSetVerse,\r\n    chapterSetVerse,\r\n    verseSetVerse,\r\n    book,\r\n    books,\r\n    chapter,\r\n    verse,\r\n    loading,\r\n    match,\r\n    bookUrl,\r\n    chapterUrl,\r\n    verseUrl,\r\n    newChapters,\r\n    newVerses,\r\n    bookLoading,\r\n    verseLoading,\r\n  ]);\r\n  return (\r\n    <Container fluid className='my-3 col-md-12'>\r\n      <Row>\r\n        <Col md='9' sm='12' xs={12} className='text-center bg-light'>\r\n          <Row>\r\n            <LinkContainer\r\n              style={{ height: '36px', fontSize: '16px' }}\r\n              className='mytop padding-small'\r\n              disabled={verseSetVerse >= finalVerse}\r\n              to={`/word/${bookSetVerse}/${chapterSetVerse}/${\r\n                Number(verseSetVerse) - (verseSetVerse <= 1 ? 0 : 1)\r\n              }`}\r\n            >\r\n              <span className='text-primary text-bolder mx-2'>Previous</span>\r\n            </LinkContainer>\r\n            <Breadcrumb className='mytop padding-small mx-auto'>\r\n              <LinkContainer to={`/word/${bookSetVerse}`}>\r\n                <Breadcrumb.Item className='text-bolder'>\r\n                  {bookSetVerse}\r\n                </Breadcrumb.Item>\r\n              </LinkContainer>\r\n              <LinkContainer to={`/word/${bookSetVerse}/${chapterSetVerse}`}>\r\n                <Breadcrumb.Item className='text-bolder'>\r\n                  {chapterSetVerse}\r\n                </Breadcrumb.Item>\r\n              </LinkContainer>\r\n              <LinkContainer\r\n                to={`/word/${bookSetVerse}/${chapterSetVerse}/${verseSetVerse}`}\r\n              >\r\n                <Breadcrumb.Item className='text-bolder'>\r\n                  {verseSetVerse}\r\n                </Breadcrumb.Item>\r\n              </LinkContainer>\r\n            </Breadcrumb>\r\n            <LinkContainer\r\n              style={{ height: '36px', fontSize: '16px' }}\r\n              className='mytop padding-small'\r\n              disabled={verseSetVerse >= finalVerse}\r\n              to={`/word/${bookSetVerse}/${chapterSetVerse}/${\r\n                Number(verseSetVerse) + (verseSetVerse >= finalVerse ? 0 : 1)\r\n              }`}\r\n            >\r\n              <span className='text-primary text-bolder mx-2'>Next</span>\r\n            </LinkContainer>\r\n          </Row>\r\n          <Row>\r\n            {loadingVerse ? (\r\n              <Loader />\r\n            ) : (\r\n              <Container className='font-small'>\r\n                {errorVerse ? (\r\n                  <Popup show={true} books={errorVerse.books} history />\r\n                ) : (\r\n                  <p>\r\n                    {page.map((verse, index) => {\r\n                      return (\r\n                        <span key={index}>\r\n                          <sup>\r\n                            <Badge\r\n                              variant='primary'\r\n                              style={{ fontSize: '10px', margin: '2px' }}\r\n                            >\r\n                              {verse.verse}\r\n                            </Badge>\r\n                          </sup>\r\n                          {verse.text}\r\n                        </span>\r\n                      );\r\n                    })}\r\n                  </p>\r\n                )}\r\n              </Container>\r\n            )}\r\n          </Row>\r\n        </Col>\r\n        <Col md='3' className='mobile-hide justify-content-center '>\r\n          <div className='bg-light my-1'>\r\n            <h6 className='text-center'>Chapters</h6>\r\n            {newChapters.map((chapter, key) => {\r\n              if (Math.abs(Number(chapter) - chapterSetVerse) < 26) {\r\n                return (\r\n                  <LinkContainer\r\n                    key={key}\r\n                    to={`/word/${bookSetVerse}/${chapter}/${verseSetVerse}`}\r\n                  >\r\n                    <Button\r\n                      variant='light'\r\n                      active={chapter + '' === chapterSetVerse || false}\r\n                    >\r\n                      {chapter}\r\n                    </Button>\r\n                  </LinkContainer>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n          </div>\r\n          <div className='bg-light my-1'>\r\n            <h6 className='text-center'>Verses</h6>\r\n            {newVerses.map((verse, key) => {\r\n              if (Math.abs(Number(verse) - Number(verseSetVerse)) < 16) {\r\n                return (\r\n                  <LinkContainer\r\n                    key={key}\r\n                    to={`/word/${bookSetVerse}/${chapterSetVerse}/${verse}`}\r\n                  >\r\n                    <Button\r\n                      variant='light'\r\n                      active={verse + '' === verseSetVerse + ''}\r\n                    >\r\n                      {verse}\r\n                    </Button>\r\n                  </LinkContainer>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Loader.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Message.js",[],["84","85"],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Sidebar.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\CategoryScreen.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Popup.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\SearchScreen.js",["86","87","88"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  ListGroup,\r\n  Alert,\r\n  Pagination,\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { searchVerseAction } from '../actions/actions';\r\nimport Loader from '../components/Loader';\r\nimport NotFound from '../components/NotFound.js';\r\n\r\nconst SearchScreen = ({ match, history }) => {\r\n  const keyword = match.params.keyword;\r\n  const urlPage = match.params.page;\r\n  const {\r\n    results,\r\n    loading,\r\n    error,\r\n    numOfPages,\r\n    page: currentPage,\r\n    keyword: qword,\r\n  } = useSelector((state) => state.searchVerse);\r\n  const [query, setQuery] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (keyword && !loading && keyword !== qword) {\r\n      dispatch(searchVerseAction(keyword, page));\r\n    }\r\n    if (keyword && urlPage && !loading && urlPage !== currentPage) {\r\n      dispatch(searchVerseAction(keyword, urlPage));\r\n    }\r\n  }, [keyword, dispatch, urlPage, results, numOfPages, error]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(searchVerseAction(query, page));\r\n  };\r\n\r\n  return (\r\n    <Container className='my-3'>\r\n      {window.innerWidth < 768 && (\r\n        <Row className='bg-light m-2'>\r\n          <Form inline className='m-auto' onSubmit={handleSubmit}>\r\n            <Form.Group className='mx-2 my-auto'>\r\n              <Form.Control\r\n                type='text'\r\n                size={window.innerWidth < 768 ? 'sm' : 'lg'}\r\n                name='search'\r\n                id='keyword'\r\n                onChange={(e) => setQuery(e.target.value)}\r\n                value={query}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className='my-auto'>\r\n              <Button\r\n                type='submit'\r\n                size={window.innerWidth < 768 ? 'sm' : 'lg'}\r\n              >\r\n                <i className='fas fa-search'></i>\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Row>\r\n      )}\r\n      {results.length < 1 ? (\r\n        <NotFound />\r\n      ) : (\r\n        <Row className='bg-light m-2'>\r\n          <Col md={12} sm={12}>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Alert>{error}</Alert>\r\n            ) : (\r\n              <ListGroup variant='flush'>\r\n                {results.map((result, key) => (\r\n                  <ListGroup.Item key={key}>\r\n                    <LinkContainer\r\n                      to={`/word/${result.book}/${result.chapter}/${result.verse}`}\r\n                    >\r\n                      <a href='#' className='h5'>\r\n                        {result.book +\r\n                          '/' +\r\n                          result.chapter +\r\n                          '/' +\r\n                          result.verse}\r\n                      </a>\r\n                    </LinkContainer>\r\n                    <p>\r\n                      {result.text.length > 150\r\n                        ? result.text.length\r\n                        : result.text.slice(0, 150) + '...'}\r\n                    </p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            )}\r\n          </Col>\r\n          <Pagination className='mx-auto'>\r\n            {[...Array(numOfPages).keys()].map((p) => {\r\n              if (Math.abs(Number(currentPage) - (Number(p) + 1)) < 4) {\r\n                return (\r\n                  <LinkContainer\r\n                    key={p}\r\n                    to={`/search/${qword}/${Number(p + 1)}`}\r\n                  >\r\n                    <Pagination.Item\r\n                      active={Number(p) + 1 === Number(currentPage)}\r\n                      key={p}\r\n                      href='#'\r\n                    >\r\n                      {Number(p) + 1}\r\n                    </Pagination.Item>\r\n                  </LinkContainer>\r\n                );\r\n              } else {\r\n                return null;\r\n              }\r\n            })}\r\n          </Pagination>\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n","D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\NotFound.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\screens\\404.js",[],"D:\\projects\\JavaScript\\majestic-lion\\pigeon\\src\\components\\Footer.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":221,"column":41,"nodeType":"97","messageId":"98","endLine":221,"endColumn":43},{"ruleId":"89","replacedBy":"99"},{"ruleId":"91","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":30,"column":16,"nodeType":"103","messageId":"104","endLine":30,"endColumn":23},{"ruleId":"105","severity":1,"message":"106","line":39,"column":6,"nodeType":"107","endLine":39,"endColumn":62,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":87,"column":23,"nodeType":"111","endLine":87,"endColumn":50},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["112"],["113"],"no-unused-vars","'setPage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'loading', 'page', and 'qword'. Either include them or remove the dependency array.","ArrayExpression",["114"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [keyword, dispatch, urlPage, results, numOfPages, error, loading, qword, currentPage, page]",{"range":"117","text":"118"},[1123,1179],"[keyword, dispatch, urlPage, results, numOfPages, error, loading, qword, currentPage, page]"]